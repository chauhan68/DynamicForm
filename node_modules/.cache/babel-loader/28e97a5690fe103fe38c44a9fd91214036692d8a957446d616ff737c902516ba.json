{"ast":null,"code":"var _jsxFileName = \"/home/pritam/ContentStack/dynamic-form/src/Components/Form/Form.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useCallback, Fragment } from 'react';\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\nimport Input from '../Input/Input';\nimport EmptyForm from '../EmptyForm/EmptyForm';\nimport Dropdown from '../Dropdown/Dropdown';\nimport Checkbox from '../Checkbox/Checkbox';\nimport Group from '../Group/Group';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { createElement as _createElement } from \"react\";\nconst Form = props => {\n  _s();\n  const [formData, updateFormData] = useState(Array.from({\n    length: 10\n  }, (v, k) => k).map(k => ({\n    id: `item-${k}`,\n    content: `item ${k}`\n  })));\n  const onSubmit = useCallback((event, data) => {\n    event.preventDefault();\n    console.log('onSubmit', data);\n  }, []);\n  const updateOrder = useCallback((startIndex, endIndex) => {\n    const clonedData = [...formData];\n    const [removed] = clonedData.splice(startIndex, 1);\n    clonedData.splice(endIndex, 0, removed);\n    return clonedData;\n  }, []);\n  const onDragEnd = result => {\n    console.log('Res', result);\n    if (!result.destination) {\n      return;\n    }\n    const newOrderedFormData = updateOrder(result.source.index, result.destination.index);\n    updateFormData(newOrderedFormData);\n  };\n  const getItemToRender = currentElement => {\n    const {\n      data_type,\n      label,\n      value,\n      uid,\n      _metadata = {}\n    } = currentElement;\n    if (data_type === 'group') {\n      return /*#__PURE__*/_jsxDEV(Group, {\n        id: uid,\n        data: value\n      }, uid, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 21\n      }, this);\n    } else if (data_type === 'boolean') {\n      return /*#__PURE__*/_jsxDEV(Checkbox, {\n        value: value,\n        id: uid,\n        uid: uid,\n        label: label,\n        isRequired: _metadata.required\n      }, uid, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 21\n      }, this);\n    } else if (data_type === 'dropdown') {\n      return /*#__PURE__*/_jsxDEV(Dropdown, {\n        value: value,\n        id: uid,\n        uid: uid,\n        label: label,\n        isRequired: _metadata.required\n      }, uid, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 21\n      }, this);\n    }\n    return /*#__PURE__*/_jsxDEV(Input, {\n      type: data_type,\n      label: label,\n      value: value,\n      uid: uid,\n      isRequired: _metadata.required,\n      id: uid\n    }, uid, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this);\n  };\n  const renderForm = (currentElement, index) => {\n    console.log('Index', index);\n    const {\n      uid\n    } = currentElement;\n    return /*#__PURE__*/_jsxDEV(Draggable, {\n      draggableId: uid,\n      index: index,\n      children: provided => /*#__PURE__*/_createElement(\"div\", {\n        ref: provided.innerRef,\n        ...provided.draggableProps,\n        ...provided.dragHandleProps,\n        key: uid,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }\n      }, index, getItemToRender())\n    }, uid, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this);\n  };\n  const renderComponents = () => {\n    if (!Array.isArray(formData) || formData.length === 0) {\n      return /*#__PURE__*/_jsxDEV(EmptyForm, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 20\n      }, this);\n    }\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(DragDropContext, {\n        onDragEnd: onDragEnd,\n        children: /*#__PURE__*/_jsxDEV(Droppable, {\n          droppableId: \"droppable\",\n          children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n            ref: provided.innerRef,\n            ...provided.droppableProps,\n            children: [formData.map(renderForm), provided.placeholder]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        onSubmit: onSubmit,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }, this);\n  };\n  console.log('Form', formData);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main-wrapper\",\n    children: renderComponents()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 5\n  }, this);\n};\n_s(Form, \"tk6ouTJYv62ZnaOMGiNoh28ZH1U=\");\n_c = Form;\nexport default Form;\nvar _c;\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"names":["React","useState","useCallback","Fragment","DragDropContext","Droppable","Draggable","Input","EmptyForm","Dropdown","Checkbox","Group","Form","props","formData","updateFormData","Array","from","length","v","k","map","id","content","onSubmit","event","data","preventDefault","console","log","updateOrder","startIndex","endIndex","clonedData","removed","splice","onDragEnd","result","destination","newOrderedFormData","source","index","getItemToRender","currentElement","data_type","label","value","uid","_metadata","required","renderForm","provided","innerRef","draggableProps","dragHandleProps","renderComponents","isArray","droppableProps","placeholder"],"sources":["/home/pritam/ContentStack/dynamic-form/src/Components/Form/Form.js"],"sourcesContent":["import React, { useState, useCallback, Fragment } from 'react';\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\n\nimport Input from '../Input/Input';\nimport EmptyForm from '../EmptyForm/EmptyForm';\nimport Dropdown from '../Dropdown/Dropdown';\nimport Checkbox from '../Checkbox/Checkbox';\nimport Group from '../Group/Group';\n\nconst Form = (props) => {\n\n    const [formData, updateFormData] = useState(Array.from({ length: 10 }, (v, k) => k).map((k) => ({\n        id: `item-${k}`,\n        content: `item ${k}`\n    })));\n\n    const onSubmit = useCallback((event, data) => {\n        event.preventDefault();\n        console.log('onSubmit', data);\n    }, [])\n\n    const updateOrder = useCallback((startIndex, endIndex) => {\n        const clonedData = [...formData];\n        const [removed] = clonedData.splice(startIndex, 1);\n        clonedData.splice(endIndex, 0, removed);\n\n        return clonedData;\n    }, []);\n\n    const onDragEnd = (result) => {\n        console.log('Res', result);\n        if (!result.destination) {\n            return;\n        }\n\n        const newOrderedFormData = updateOrder(\n            result.source.index,\n            result.destination.index\n        );\n\n        updateFormData(newOrderedFormData);\n    };\n\n    const getItemToRender = (currentElement) => {\n        const { data_type, label, value, uid, _metadata = {} } = currentElement;\n        if (data_type === 'group') {\n            return (<Group id={uid} key={uid} data={value} />)\n        } else if (data_type === 'boolean') {\n            return (<Checkbox value={value} id={uid} key={uid} uid={uid} label={label} isRequired={_metadata.required} />)\n        } else if (data_type === 'dropdown') {\n            return (<Dropdown value={value} id={uid} key={uid} uid={uid} label={label} isRequired={_metadata.required} />)\n        }\n        return (\n            <Input\n                type={data_type}\n                label={label}\n                value={value}\n                uid={uid}\n                isRequired={_metadata.required}\n                id={uid}\n                key={uid}\n            />\n        );\n    };\n\n    const renderForm = (currentElement, index) => {\n        console.log('Index', index);\n        const { uid } = currentElement;\n\n        return (\n            <Draggable key={uid} draggableId={uid} index={index}>\n                {(provided) => (\n                    <div\n                        ref={provided.innerRef}\n                        {...provided.draggableProps}\n                        {...provided.dragHandleProps}\n                        key={uid}\n                    >\n                        {index}\n                        {getItemToRender()}\n                    </div>\n                )}\n            </Draggable>\n        )\n    }\n\n    const renderComponents = () => {\n        if (!Array.isArray(formData) || formData.length === 0) {\n            return <EmptyForm />;\n        }\n        return (\n            <form>\n                <DragDropContext onDragEnd={onDragEnd}>\n                    <Droppable droppableId=\"droppable\">\n                        {(provided) => (\n                            <div\n                                ref={provided.innerRef}\n                                {...provided.droppableProps}\n                            >\n                                {formData.map(renderForm)}\n                                {provided.placeholder}\n                            </div>\n                        )}\n                    </Droppable>\n                </DragDropContext>\n                <button type='submit' onSubmit={onSubmit}>Submit</button>\n            </form>\n        );\n    };\n\nconsole.log('Form', formData);\nreturn (\n    <div className=\"main-wrapper\">\n        {renderComponents()}\n    </div>\n);\n};\n\nexport default Form;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}