{"ast":null,"code":"var _jsxFileName = \"/home/pritam/ContentStack/dynamic-form/src/Components/Group/Group.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport Checkbox from \"../Checkbox/Checkbox\";\nimport Dropdown from \"../Dropdown/Dropdown\";\nimport Input from \"../Input/Input\";\nimport './group.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Group = props => {\n  _s();\n  const [isOpened, toggleOpen] = useState(false);\n  const toggleButton = () => {\n    toggleOpen(lastOpenedState => !lastOpenedState);\n  };\n  const renderData = currentElement => {\n    const {\n      data_type,\n      label,\n      value,\n      uid,\n      _metadata = {}\n    } = currentElement;\n    if (data_type === 'group') {\n      return /*#__PURE__*/_jsxDEV(Group, {\n        data: currentElement.value\n      }, uid, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 21\n      }, this);\n    } else if (data_type === 'boolean') {\n      return /*#__PURE__*/_jsxDEV(Checkbox, {\n        value: value,\n        uid: uid,\n        label: label,\n        isRequired: _metadata.required\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 21\n      }, this);\n    } else if (data_type === 'dropdown') {\n      return /*#__PURE__*/_jsxDEV(Dropdown, {\n        value: value,\n        uid: uid,\n        label: label,\n        isRequired: _metadata.required\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 21\n      }, this);\n    }\n    return /*#__PURE__*/_jsxDEV(Input, {\n      type: data_type,\n      label: label,\n      value: value,\n      uid: uid,\n      isRequired: _metadata.required\n    }, uid, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"group-container container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: `group-accordian ${isOpened ? 'opened' : 'closed'}`,\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Group\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"accordian-button\",\n        type: \"button\",\n        onClick: toggleButton,\n        children: isOpened ? /*#__PURE__*/_jsxDEV(React.Fragment, {\n          children: \"\\u25B2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 33\n        }, this) : /*#__PURE__*/_jsxDEV(React.Fragment, {\n          children: \"\\u25BC\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 77\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), isOpened && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"group-fields-subcontainer\",\n      children: props.data.map(renderData)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n};\n_s(Group, \"2vdKTDj0DTavw+wcwDDCTIo53mc=\");\n_c = Group;\nexport default Group;\nvar _c;\n$RefreshReg$(_c, \"Group\");","map":{"version":3,"names":["React","useState","Checkbox","Dropdown","Input","Group","props","isOpened","toggleOpen","toggleButton","lastOpenedState","renderData","currentElement","data_type","label","value","uid","_metadata","required","data","map"],"sources":["/home/pritam/ContentStack/dynamic-form/src/Components/Group/Group.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport Checkbox from \"../Checkbox/Checkbox\";\nimport Dropdown from \"../Dropdown/Dropdown\";\nimport Input from \"../Input/Input\";\n\nimport './group.css';\n\nconst Group = (props) => {\n    const [isOpened, toggleOpen] = useState(false)\n\n    const toggleButton = () => {\n        toggleOpen((lastOpenedState) => !lastOpenedState);\n    }\n\n    const renderData = (currentElement) => {\n        const { data_type, label, value, uid, _metadata = {} } = currentElement;\n        if (data_type === 'group') {\n            return (<Group key={uid} data={currentElement.value} />)\n        } else if (data_type === 'boolean') {\n            return (<Checkbox value={value} uid={uid} label={label} isRequired={_metadata.required} />)\n        } else if (data_type === 'dropdown') {\n            return (<Dropdown value={value} uid={uid} label={label} isRequired={_metadata.required} />)\n        }\n        return (\n            <Input\n                key={uid}\n                type={data_type}\n                label={label}\n                value={value}\n                uid={uid}\n                isRequired={_metadata.required}\n            />\n        );\n    }\n\n    return (\n        <div className=\"group-container container\">\n            <div className={`group-accordian ${isOpened ? 'opened' : 'closed'}`}>\n                <span>Group</span>\n                <button className=\"accordian-button\" type=\"button\" onClick={toggleButton}>\n                    {isOpened ? <React.Fragment>&#x25B2;</React.Fragment> : <React.Fragment>&#x25BC;</React.Fragment>}\n                </button>\n            </div>\n            {isOpened && (\n                <div className=\"group-fields-subcontainer\">\n                    {props.data.map(renderData)}\n                </div>\n            )\n            }\n        </div>\n    )\n};\n\nexport default Group;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,QAAQ,MAAM,sBAAsB;AAC3C,OAAOC,QAAQ,MAAM,sBAAsB;AAC3C,OAAOC,KAAK,MAAM,gBAAgB;AAElC,OAAO,aAAa;AAAC;AAErB,MAAMC,KAAK,GAAIC,KAAK,IAAK;EAAA;EACrB,MAAM,CAACC,QAAQ,EAAEC,UAAU,CAAC,GAAGP,QAAQ,CAAC,KAAK,CAAC;EAE9C,MAAMQ,YAAY,GAAG,MAAM;IACvBD,UAAU,CAAEE,eAAe,IAAK,CAACA,eAAe,CAAC;EACrD,CAAC;EAED,MAAMC,UAAU,GAAIC,cAAc,IAAK;IACnC,MAAM;MAAEC,SAAS;MAAEC,KAAK;MAAEC,KAAK;MAAEC,GAAG;MAAEC,SAAS,GAAG,CAAC;IAAE,CAAC,GAAGL,cAAc;IACvE,IAAIC,SAAS,KAAK,OAAO,EAAE;MACvB,oBAAQ,QAAC,KAAK;QAAW,IAAI,EAAED,cAAc,CAACG;MAAM,GAAhCC,GAAG;QAAA;QAAA;QAAA;MAAA,QAAgC;IAC3D,CAAC,MAAM,IAAIH,SAAS,KAAK,SAAS,EAAE;MAChC,oBAAQ,QAAC,QAAQ;QAAC,KAAK,EAAEE,KAAM;QAAC,GAAG,EAAEC,GAAI;QAAC,KAAK,EAAEF,KAAM;QAAC,UAAU,EAAEG,SAAS,CAACC;MAAS;QAAA;QAAA;QAAA;MAAA,QAAG;IAC9F,CAAC,MAAM,IAAIL,SAAS,KAAK,UAAU,EAAE;MACjC,oBAAQ,QAAC,QAAQ;QAAC,KAAK,EAAEE,KAAM;QAAC,GAAG,EAAEC,GAAI;QAAC,KAAK,EAAEF,KAAM;QAAC,UAAU,EAAEG,SAAS,CAACC;MAAS;QAAA;QAAA;QAAA;MAAA,QAAG;IAC9F;IACA,oBACI,QAAC,KAAK;MAEF,IAAI,EAAEL,SAAU;MAChB,KAAK,EAAEC,KAAM;MACb,KAAK,EAAEC,KAAM;MACb,GAAG,EAAEC,GAAI;MACT,UAAU,EAAEC,SAAS,CAACC;IAAS,GAL1BF,GAAG;MAAA;MAAA;MAAA;IAAA,QAMV;EAEV,CAAC;EAED,oBACI;IAAK,SAAS,EAAC,2BAA2B;IAAA,wBACtC;MAAK,SAAS,EAAG,mBAAkBT,QAAQ,GAAG,QAAQ,GAAG,QAAS,EAAE;MAAA,wBAChE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAkB,eAClB;QAAQ,SAAS,EAAC,kBAAkB;QAAC,IAAI,EAAC,QAAQ;QAAC,OAAO,EAAEE,YAAa;QAAA,UACpEF,QAAQ,gBAAG,QAAC,KAAK,CAAC,QAAQ;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAA0B,gBAAG,QAAC,KAAK,CAAC,QAAQ;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAA0B;QAAA;QAAA;QAAA;MAAA,QAC5F;IAAA;MAAA;MAAA;MAAA;IAAA,QACP,EACLA,QAAQ,iBACL;MAAK,SAAS,EAAC,2BAA2B;MAAA,UACrCD,KAAK,CAACa,IAAI,CAACC,GAAG,CAACT,UAAU;IAAC;MAAA;MAAA;MAAA;IAAA,QAElC;EAAA;IAAA;IAAA;IAAA;EAAA,QAEC;AAEd,CAAC;AAAC,GA5CIN,KAAK;AAAA,KAALA,KAAK;AA8CX,eAAeA,KAAK;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}