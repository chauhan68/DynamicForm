{"ast":null,"code":"var _jsxFileName = \"/home/pritam/ContentStack/dynamic-form/src/Components/Form/Form.js\",\n  _s = $RefreshSig$();\nimport React, { Fragment, useState } from 'react';\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\nimport { useForm } from \"react-hook-form\";\nimport { FixedSizeList as List } from \"react-window\";\nimport AutoSizer from \"react-virtualized-auto-sizer\";\nimport EmptyForm from '../EmptyForm/EmptyForm';\nimport FormFields from '../FormFields/FormFields';\nimport './form.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Form = props => {\n  _s();\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      errors\n    }\n  } = useForm();\n  const [formData, updateFormData] = useState(props.form);\n  const onSubmit = data => {\n    console.log('Data entered is', data);\n  };\n  const updateOrder = (startIndex, endIndex) => {\n    const clonedData = [...formData];\n    const [removed] = clonedData.splice(startIndex, 1);\n    clonedData.splice(endIndex, 0, removed);\n    return clonedData;\n  };\n  const onDragEnd = result => {\n    if (!result.destination) {\n      return;\n    }\n    const newOrderedFormData = updateOrder(result.source.index, result.destination.index);\n    updateFormData(newOrderedFormData);\n  };\n  const renderForm = (currentElement, index) => {\n    const {\n      uid\n    } = currentElement;\n    return /*#__PURE__*/_jsxDEV(Draggable, {\n      draggableId: uid,\n      index: index,\n      isDragDisabled: formData.length === 1,\n      children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"field-container\",\n        children: [formData.length > 1 && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"reorder-icon\",\n          ref: provided.innerRef,\n          ...provided.draggableProps,\n          ...provided.dragHandleProps,\n          children: \"\\u2630\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(FormFields, {\n          currentElement: currentElement,\n          register: register,\n          errors: errors\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 25\n        }, this)]\n      }, uid, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 21\n      }, this)\n    }, uid, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this);\n  };\n  const renderComponents = () => {\n    if (!Array.isArray(formData) || formData.length === 0) {\n      return /*#__PURE__*/_jsxDEV(EmptyForm, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 20\n      }, this);\n    }\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit(onSubmit),\n      children: [/*#__PURE__*/_jsxDEV(DragDropContext, {\n        onDragEnd: onDragEnd,\n        children: /*#__PURE__*/_jsxDEV(Droppable, {\n          droppableId: \"droppable\",\n          mode: \"virtual\",\n          renderClone: (provided, snapshot, rubric) => /*#__PURE__*/_jsxDEV(FormFields, {\n            currentElement: formData[rubric.source.index],\n            index: rubric.source.index,\n            register: register,\n            errors: errors\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 29\n          }, this),\n          children: provided =>\n          /*#__PURE__*/\n          // <div\n          //     ref={provided.innerRef}\n          //     {...provided.droppableProps}\n          // >\n          // <AutoSizer>\n          //     {({ height, width }) => (\n          _jsxDEV(List, {\n            height: 500,\n            itemCount: formData.length,\n            itemSize: 20,\n            width: 300,\n            outerRef: provided.outerRef,\n            itemData: formData,\n            children: /*#__PURE__*/_jsxDEV(Fragment, {\n              children: formData.map(renderForm)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 29\n          }, this)\n          //     )}\n          // </AutoSizer>\n          // </div>\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main-wrapper\",\n    children: renderComponents()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 121,\n    columnNumber: 9\n  }, this);\n};\n_s(Form, \"uAeZh3Kep3p0wiF5Pz0UnKnPtVA=\", false, function () {\n  return [useForm];\n});\n_c = Form;\nexport default Form;\nvar _c;\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"names":["React","Fragment","useState","DragDropContext","Droppable","Draggable","useForm","FixedSizeList","List","AutoSizer","EmptyForm","FormFields","Form","props","register","handleSubmit","formState","errors","formData","updateFormData","form","onSubmit","data","console","log","updateOrder","startIndex","endIndex","clonedData","removed","splice","onDragEnd","result","destination","newOrderedFormData","source","index","renderForm","currentElement","uid","length","provided","innerRef","draggableProps","dragHandleProps","renderComponents","Array","isArray","snapshot","rubric","outerRef","map"],"sources":["/home/pritam/ContentStack/dynamic-form/src/Components/Form/Form.js"],"sourcesContent":["import React, { Fragment, useState } from 'react';\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\nimport { useForm } from \"react-hook-form\";\nimport { FixedSizeList as List } from \"react-window\";\nimport AutoSizer from \"react-virtualized-auto-sizer\";\n\nimport EmptyForm from '../EmptyForm/EmptyForm';\nimport FormFields from '../FormFields/FormFields';\n\nimport './form.css';\n\nconst Form = (props) => {\n\n    const { register, handleSubmit, formState: { errors } } = useForm();\n    const [formData, updateFormData] = useState(props.form);\n\n    const onSubmit = (data) => {\n        console.log('Data entered is', data);\n    }\n\n    const updateOrder = (startIndex, endIndex) => {\n        const clonedData = [...formData];\n        const [removed] = clonedData.splice(startIndex, 1);\n        clonedData.splice(endIndex, 0, removed);\n\n        return clonedData;\n    };\n\n    const onDragEnd = (result) => {\n        if (!result.destination) {\n            return;\n        }\n\n        const newOrderedFormData = updateOrder(\n            result.source.index,\n            result.destination.index\n        );\n\n        updateFormData(newOrderedFormData);\n    };\n\n    const renderForm = (currentElement, index) => {\n        const { uid } = currentElement;\n\n        return (\n            <Draggable key={uid} draggableId={uid} index={index} isDragDisabled={formData.length === 1}>\n                {(provided) => (\n                    <div key={uid} className=\"field-container\">\n                        {formData.length > 1 && (\n                            <span\n                                className=\"reorder-icon\"\n                                ref={provided.innerRef}\n                                {...provided.draggableProps}\n                                {...provided.dragHandleProps}\n                            >\n                                &#9776;\n                            </span>\n                        )}\n                        <FormFields currentElement={currentElement} register={register} errors={errors} />\n                    </div>\n                )}\n            </Draggable>\n        )\n    }\n\n    const renderComponents = () => {\n        if (!Array.isArray(formData) || formData.length === 0) {\n            return <EmptyForm />;\n        }\n        return (\n            <form onSubmit={handleSubmit(onSubmit)}>\n                <DragDropContext onDragEnd={onDragEnd}>\n                    <Droppable\n                        droppableId=\"droppable\"\n                        mode=\"virtual\"\n                        renderClone={(\n                            provided,\n                            snapshot,\n                            rubric\n                        ) => (\n                            <FormFields\n                                currentElement={formData[rubric.source.index]}\n                                index={rubric.source.index}\n                                register={register}\n                                errors={errors}\n                            />\n                        )}\n                    >\n                        {(provided) => (\n                            // <div\n                            //     ref={provided.innerRef}\n                            //     {...provided.droppableProps}\n                            // >\n                            // <AutoSizer>\n                            //     {({ height, width }) => (\n                            <List\n                                height={500}\n                                itemCount={formData.length}\n                                itemSize={20}\n                                width={300}\n                                outerRef={provided.outerRef}\n                                itemData={formData}\n                            >\n                                <Fragment>\n                                    {formData.map(renderForm)}\n\n                                </Fragment>\n                            </List>\n                            //     )}\n                            // </AutoSizer>\n                            // </div>\n                        )}\n                    </Droppable>\n                </DragDropContext>\n                <button type='submit'>Submit</button>\n            </form>\n        );\n    };\n\n    return (\n        <div className=\"main-wrapper\">\n            {renderComponents()}\n        </div>\n    );\n};\n\nexport default Form;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,QAAQ,QAAQ,OAAO;AACjD,SAASC,eAAe,EAAEC,SAAS,EAAEC,SAAS,QAAQ,qBAAqB;AAC3E,SAASC,OAAO,QAAQ,iBAAiB;AACzC,SAASC,aAAa,IAAIC,IAAI,QAAQ,cAAc;AACpD,OAAOC,SAAS,MAAM,8BAA8B;AAEpD,OAAOC,SAAS,MAAM,wBAAwB;AAC9C,OAAOC,UAAU,MAAM,0BAA0B;AAEjD,OAAO,YAAY;AAAC;AAEpB,MAAMC,IAAI,GAAIC,KAAK,IAAK;EAAA;EAEpB,MAAM;IAAEC,QAAQ;IAAEC,YAAY;IAAEC,SAAS,EAAE;MAAEC;IAAO;EAAE,CAAC,GAAGX,OAAO,EAAE;EACnE,MAAM,CAACY,QAAQ,EAAEC,cAAc,CAAC,GAAGjB,QAAQ,CAACW,KAAK,CAACO,IAAI,CAAC;EAEvD,MAAMC,QAAQ,GAAIC,IAAI,IAAK;IACvBC,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAEF,IAAI,CAAC;EACxC,CAAC;EAED,MAAMG,WAAW,GAAG,CAACC,UAAU,EAAEC,QAAQ,KAAK;IAC1C,MAAMC,UAAU,GAAG,CAAC,GAAGV,QAAQ,CAAC;IAChC,MAAM,CAACW,OAAO,CAAC,GAAGD,UAAU,CAACE,MAAM,CAACJ,UAAU,EAAE,CAAC,CAAC;IAClDE,UAAU,CAACE,MAAM,CAACH,QAAQ,EAAE,CAAC,EAAEE,OAAO,CAAC;IAEvC,OAAOD,UAAU;EACrB,CAAC;EAED,MAAMG,SAAS,GAAIC,MAAM,IAAK;IAC1B,IAAI,CAACA,MAAM,CAACC,WAAW,EAAE;MACrB;IACJ;IAEA,MAAMC,kBAAkB,GAAGT,WAAW,CAClCO,MAAM,CAACG,MAAM,CAACC,KAAK,EACnBJ,MAAM,CAACC,WAAW,CAACG,KAAK,CAC3B;IAEDjB,cAAc,CAACe,kBAAkB,CAAC;EACtC,CAAC;EAED,MAAMG,UAAU,GAAG,CAACC,cAAc,EAAEF,KAAK,KAAK;IAC1C,MAAM;MAAEG;IAAI,CAAC,GAAGD,cAAc;IAE9B,oBACI,QAAC,SAAS;MAAW,WAAW,EAAEC,GAAI;MAAC,KAAK,EAAEH,KAAM;MAAC,cAAc,EAAElB,QAAQ,CAACsB,MAAM,KAAK,CAAE;MAAA,UACrFC,QAAQ,iBACN;QAAe,SAAS,EAAC,iBAAiB;QAAA,WACrCvB,QAAQ,CAACsB,MAAM,GAAG,CAAC,iBAChB;UACI,SAAS,EAAC,cAAc;UACxB,GAAG,EAAEC,QAAQ,CAACC,QAAS;UAAA,GACnBD,QAAQ,CAACE,cAAc;UAAA,GACvBF,QAAQ,CAACG,eAAe;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAInC,eACD,QAAC,UAAU;UAAC,cAAc,EAAEN,cAAe;UAAC,QAAQ,EAAExB,QAAS;UAAC,MAAM,EAAEG;QAAO;UAAA;UAAA;UAAA;QAAA,QAAG;MAAA,GAX5EsB,GAAG;QAAA;QAAA;QAAA;MAAA;IAahB,GAfWA,GAAG;MAAA;MAAA;MAAA;IAAA,QAgBP;EAEpB,CAAC;EAED,MAAMM,gBAAgB,GAAG,MAAM;IAC3B,IAAI,CAACC,KAAK,CAACC,OAAO,CAAC7B,QAAQ,CAAC,IAAIA,QAAQ,CAACsB,MAAM,KAAK,CAAC,EAAE;MACnD,oBAAO,QAAC,SAAS;QAAA;QAAA;QAAA;MAAA,QAAG;IACxB;IACA,oBACI;MAAM,QAAQ,EAAEzB,YAAY,CAACM,QAAQ,CAAE;MAAA,wBACnC,QAAC,eAAe;QAAC,SAAS,EAAEU,SAAU;QAAA,uBAClC,QAAC,SAAS;UACN,WAAW,EAAC,WAAW;UACvB,IAAI,EAAC,SAAS;UACd,WAAW,EAAE,CACTU,QAAQ,EACRO,QAAQ,EACRC,MAAM,kBAEN,QAAC,UAAU;YACP,cAAc,EAAE/B,QAAQ,CAAC+B,MAAM,CAACd,MAAM,CAACC,KAAK,CAAE;YAC9C,KAAK,EAAEa,MAAM,CAACd,MAAM,CAACC,KAAM;YAC3B,QAAQ,EAAEtB,QAAS;YACnB,MAAM,EAAEG;UAAO;YAAA;YAAA;YAAA;UAAA,QAErB;UAAA,UAEAwB,QAAQ;UAAA;UACN;UACA;UACA;UACA;UACA;UACA;UACA,QAAC,IAAI;YACD,MAAM,EAAE,GAAI;YACZ,SAAS,EAAEvB,QAAQ,CAACsB,MAAO;YAC3B,QAAQ,EAAE,EAAG;YACb,KAAK,EAAE,GAAI;YACX,QAAQ,EAAEC,QAAQ,CAACS,QAAS;YAC5B,QAAQ,EAAEhC,QAAS;YAAA,uBAEnB,QAAC,QAAQ;cAAA,UACJA,QAAQ,CAACiC,GAAG,CAACd,UAAU;YAAC;cAAA;cAAA;cAAA;YAAA;UAElB;YAAA;YAAA;YAAA;UAAA;UAEf;UACA;UACA;QACH;UAAA;UAAA;UAAA;QAAA;MACO;QAAA;QAAA;QAAA;MAAA,QACE,eAClB;QAAQ,IAAI,EAAC,QAAQ;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAgB;IAAA;MAAA;MAAA;MAAA;IAAA,QAClC;EAEf,CAAC;EAED,oBACI;IAAK,SAAS,EAAC,cAAc;IAAA,UACxBQ,gBAAgB;EAAE;IAAA;IAAA;IAAA;EAAA,QACjB;AAEd,CAAC;AAAC,GAjHIjC,IAAI;EAAA,QAEoDN,OAAO;AAAA;AAAA,KAF/DM,IAAI;AAmHV,eAAeA,IAAI;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}