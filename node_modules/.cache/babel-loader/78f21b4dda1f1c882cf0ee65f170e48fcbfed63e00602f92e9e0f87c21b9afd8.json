{"ast":null,"code":"var _jsxFileName = \"/home/pritam/ContentStack/dynamic-form/src/Components/Group/Group.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport FormFields from \"../FormFields/FormFields\";\nimport './group.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Group = props => {\n  _s();\n  const [isOpened, toggleOpen] = useState(false);\n  const toggleButton = () => {\n    toggleOpen(lastOpenedState => !lastOpenedState);\n  };\n  const renderData = currentElement => {\n    const clonedData = JSON.parse(JSON.stringify(currentElement));\n    clonedData.uid = `${props.id}-${props.uid}`;\n    return /*#__PURE__*/_jsxDEV(FormFields, {\n      currentElement: clonedData,\n      register: props.register\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 17\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"group-container container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: `group-accordian ${isOpened ? 'opened' : 'closed'}`,\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Group\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"accordian-button\",\n        type: \"button\",\n        onClick: toggleButton,\n        children: isOpened ? /*#__PURE__*/_jsxDEV(React.Fragment, {\n          children: \"\\u25B2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 33\n        }, this) : /*#__PURE__*/_jsxDEV(React.Fragment, {\n          children: \"\\u25BC\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 77\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this), isOpened && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"group-fields-subcontainer\",\n      children: props.data.map(renderData)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 9\n  }, this);\n};\n_s(Group, \"2vdKTDj0DTavw+wcwDDCTIo53mc=\");\n_c = Group;\nexport default Group;\nvar _c;\n$RefreshReg$(_c, \"Group\");","map":{"version":3,"names":["React","useState","FormFields","Group","props","isOpened","toggleOpen","toggleButton","lastOpenedState","renderData","currentElement","clonedData","JSON","parse","stringify","uid","id","register","data","map"],"sources":["/home/pritam/ContentStack/dynamic-form/src/Components/Group/Group.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport FormFields from \"../FormFields/FormFields\";\n\nimport './group.css';\n\nconst Group = (props) => {\n    const [isOpened, toggleOpen] = useState(false)\n\n    const toggleButton = () => {\n        toggleOpen((lastOpenedState) => !lastOpenedState);\n    }\n\n    const renderData = (currentElement) => {\n        const clonedData = JSON.parse(JSON.stringify(currentElement));\n        clonedData.uid = `${props.id}-${props.uid}`\n        return (<FormFields currentElement={clonedData } register={props.register}/>)\n    }\n\n    return (\n        <div className=\"group-container container\">\n            <div className={`group-accordian ${isOpened ? 'opened' : 'closed'}`}>\n                <span>Group</span>\n                <button className=\"accordian-button\" type=\"button\" onClick={toggleButton}>\n                    {isOpened ? <React.Fragment>&#x25B2;</React.Fragment> : <React.Fragment>&#x25BC;</React.Fragment>}\n                </button>\n            </div>\n            {isOpened && (\n                <div className=\"group-fields-subcontainer\">\n                    {props.data.map(renderData)}\n                </div>\n            )\n            }\n        </div>\n    )\n};\n\nexport default Group;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,UAAU,MAAM,0BAA0B;AAEjD,OAAO,aAAa;AAAC;AAErB,MAAMC,KAAK,GAAIC,KAAK,IAAK;EAAA;EACrB,MAAM,CAACC,QAAQ,EAAEC,UAAU,CAAC,GAAGL,QAAQ,CAAC,KAAK,CAAC;EAE9C,MAAMM,YAAY,GAAG,MAAM;IACvBD,UAAU,CAAEE,eAAe,IAAK,CAACA,eAAe,CAAC;EACrD,CAAC;EAED,MAAMC,UAAU,GAAIC,cAAc,IAAK;IACnC,MAAMC,UAAU,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,SAAS,CAACJ,cAAc,CAAC,CAAC;IAC7DC,UAAU,CAACI,GAAG,GAAI,GAAEX,KAAK,CAACY,EAAG,IAAGZ,KAAK,CAACW,GAAI,EAAC;IAC3C,oBAAQ,QAAC,UAAU;MAAC,cAAc,EAAEJ,UAAY;MAAC,QAAQ,EAAEP,KAAK,CAACa;IAAS;MAAA;MAAA;MAAA;IAAA,QAAE;EAChF,CAAC;EAED,oBACI;IAAK,SAAS,EAAC,2BAA2B;IAAA,wBACtC;MAAK,SAAS,EAAG,mBAAkBZ,QAAQ,GAAG,QAAQ,GAAG,QAAS,EAAE;MAAA,wBAChE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAkB,eAClB;QAAQ,SAAS,EAAC,kBAAkB;QAAC,IAAI,EAAC,QAAQ;QAAC,OAAO,EAAEE,YAAa;QAAA,UACpEF,QAAQ,gBAAG,QAAC,KAAK,CAAC,QAAQ;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAA0B,gBAAG,QAAC,KAAK,CAAC,QAAQ;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAA0B;QAAA;QAAA;QAAA;MAAA,QAC5F;IAAA;MAAA;MAAA;MAAA;IAAA,QACP,EACLA,QAAQ,iBACL;MAAK,SAAS,EAAC,2BAA2B;MAAA,UACrCD,KAAK,CAACc,IAAI,CAACC,GAAG,CAACV,UAAU;IAAC;MAAA;MAAA;MAAA;IAAA,QAElC;EAAA;IAAA;IAAA;IAAA;EAAA,QAEC;AAEd,CAAC;AAAC,GA7BIN,KAAK;AAAA,KAALA,KAAK;AA+BX,eAAeA,KAAK;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}